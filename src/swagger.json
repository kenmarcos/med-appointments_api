{
  "openapi": "3.0.0",
  "info": {
    "title": "Medical Appointments API - Documentation",
    "description": "API for managing medical appointments",
    "version": "1.0.0",
    "contact": {
      "name": "Marcos Kenji Kuribayashi",
      "url": "https://marcos-website.vercel.app",
      "email": "marcosken13@gmail.com"
    }
  },

  "servers": [
    {
      "url": "http://localhost:3000/api",
      "description": "Development server"
    }
  ],

  "paths": {
    "/login": {
      "post": {
        "description": "Login to get token",
        "tags": ["Session"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/login"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "BAD REQUEST",
            "content": {
              "application/json": {
                "examples": {
                  "requiredFieldError": {
                    "value": {
                      "message": {
                        "email": ["Required"],
                        "password": ["Required"]
                      }
                    }
                  },
                  "invalidEmailError": {
                    "value": {
                      "message": {
                        "email": ["Invalid email"]
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED",
            "content": {
              "application/json": {
                "examples": {
                  "invalidUserError": {
                    "value": {
                      "message": "Invalid user"
                    }
                  },
                  "wrongPasswordError": {
                    "value": {
                      "message": "Wrong password"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "post": {
        "description": "Create a new user",
        "tags": ["User"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/createUser"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "CREATED",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/readUser"
                }
              }
            }
          },
          "400": {
            "description": "BAD REQUEST",
            "content": {
              "application/json": {
                "examples": {
                  "requiredFieldError": {
                    "value": {
                      "message": {
                        "name": ["Required"],
                        "email": ["Required"],
                        "password": ["Required"]
                      }
                    }
                  },
                  "invalidEmailError": {
                    "value": {
                      "message": {
                        "email": ["Invalid email"]
                      }
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "CONFLICT",
            "content": {
              "application/json": {
                "examples": {
                  "conflictError": {
                    "value": {
                      "message": "User with this email already exists"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "Get all users",
        "tags": ["User"],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/readUser"
                  }
                }
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED",
            "content": {
              "application/json": {
                "examples": {
                  "missingTokenError": {
                    "value": {
                      "message": "Missing bearer token"
                    }
                  },
                  "tokenMalformedError": {
                    "value": {
                      "message": "jwt malformed"
                    }
                  },
                  "tokenInvalidSignatureError": {
                    "value": {
                      "message": "invalid signature"
                    }
                  },
                  "tokenExpiredError": {
                    "value": {
                      "message": "jwt expired"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "FORBIDDEN",
            "content": {
              "application/json": {
                "examples": {
                  "insufficientPermissionError": {
                    "value": {
                      "message": "Insufficient permission. Only admins"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/:userId": {
      "patch": {
        "description": "Update a user",
        "tags": ["User"],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "userId",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/updateUser"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/readUser"
                }
              }
            }
          },
          "403": {
            "description": "FORBIDDEN",
            "content": {
              "application/json": {
                "examples": {
                  "insufficientPermissionError": {
                    "value": {
                      "message": "Insufficient permission. Only the owner or admins"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "NOT FOUND",
            "content": {
              "application/json": {
                "examples": {
                  "userNotFoundError": {
                    "value": {
                      "message": "User not found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Delete a user",
        "tags": ["User"],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "userId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "NO CONTENT"
          },
          "403": {
            "description": "FORBIDDEN",
            "content": {
              "application/json": {
                "examples": {
                  "insufficientPermissionError": {
                    "value": {
                      "message": "Insufficient permission. Only the owner or admins"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "NOT FOUND",
            "content": {
              "application/json": {
                "examples": {
                  "userNotFoundError": {
                    "value": {
                      "message": "User not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/specialties": {
      "post": {
        "description": "Create a new specialty",
        "tags": ["Specialty"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/createSpecialty"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "CREATED",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/readSpecialty"
                }
              }
            }
          },
          "400": {
            "description": "BAD REQUEST",
            "content": {
              "application/json": {
                "examples": {
                  "requiredFieldError": {
                    "value": {
                      "message": {
                        "name": ["Required"]
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED",
            "content": {
              "application/json": {
                "examples": {
                  "missingTokenError": {
                    "value": {
                      "message": "Missing bearer token"
                    }
                  },
                  "tokenMalformedError": {
                    "value": {
                      "message": "jwt malformed"
                    }
                  },
                  "tokenInvalidSignatureError": {
                    "value": {
                      "message": "invalid signature"
                    }
                  },
                  "tokenExpiredError": {
                    "value": {
                      "message": "jwt expired"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "FORBIDDEN",
            "content": {
              "application/json": {
                "examples": {
                  "insufficientPermissionError": {
                    "value": {
                      "message": "Insufficient permission. Only admins"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "Get all specialties",
        "tags": ["Specialty"],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/readSpecialty"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/specialties/:specialtyId": {
      "get": {
        "description": "Get a specialty",
        "tags": ["Specialty"],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/readSpecialtyDetails"
                }
              }
            }
          },
          "404": {
            "description": "NOT FOUND",
            "content": {
              "application/json": {
                "examples": {
                  "specialtyNotFoundError": {
                    "value": {
                      "message": "Specialty not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/clinics": {
      "post": {
        "description": "Create a new clinic",
        "tags": ["Clinic"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/createClinic"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "CREATED",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/readClinic"
                }
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED",
            "content": {
              "application/json": {
                "examples": {
                  "missingTokenError": {
                    "value": {
                      "message": "Missing bearer token"
                    }
                  },
                  "tokenMalformedError": {
                    "value": {
                      "message": "jwt malformed"
                    }
                  },
                  "tokenInvalidSignatureError": {
                    "value": {
                      "message": "invalid signature"
                    }
                  },
                  "tokenExpiredError": {
                    "value": {
                      "message": "jwt expired"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "FORBIDDEN",
            "content": {
              "application/json": {
                "examples": {
                  "insufficientPermissionError": {
                    "value": {
                      "message": "Insufficient permission. Only admins"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "NOT FOUND",
            "content": {
              "application/json": {
                "examples": {
                  "specialtyNotFoundError": {
                    "value": {
                      "message": "Specialty not found"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "CONFLICT",
            "content": {
              "application/json": {
                "examples": {
                  "addressAlreadyExistsError": {
                    "value": {
                      "message": "Address already exists"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "Get all clinics",
        "tags": ["Clinic"],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/readClinic"
                  }
                }
              }
            }
          }
        }
      }
    }
  },

  "components": {
    "schemas": {
      "login": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "createUser": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "isAdmin": {
            "type": "boolean",
            "default": false
          }
        }
      },
      "readUser": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "isAdmin": {
            "type": "boolean",
            "default": false
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          },
          "deletedAt": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "updateUser": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "createSpecialty": {
        "type": "object",
        "required": ["name"],
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "readSpecialty": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "readSpecialtyDetails": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "clinics": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "public": {
                  "type": "boolean",
                  "default": true
                },
                "name": {
                  "type": "string"
                },
                "beds": {
                  "type": "number"
                },
                "address": {
                  "type": "object",
                  "$ref": "#/components/schemas/address"
                },
                "partnerSince": {
                  "type": "string"
                },
                "infosUpdateAt": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "createClinic": {
        "type": "object",
        "required": ["name", "address", "specialtyId"],
        "properties": {
          "public": {
            "type": "boolean",
            "default": true
          },
          "name": {
            "type": "string"
          },
          "beds": {
            "type": "number",
            "default": 0
          },
          "address": {
            "type": "object",
            "$ref": "#/components/schemas/address"
          },
          "specialtyId": {
            "type": "string"
          }
        }
      },
      "readClinic": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "public": {
            "type": "boolean",
            "default": true
          },
          "name": {
            "type": "string"
          },
          "beds": {
            "type": "number"
          },
          "address": {
            "type": "object",
            "$ref": "#/components/schemas/address"
          },
          "partnerSince": {
            "type": "string"
          },
          "infosUpdateAt": {
            "type": "string"
          },
          "specialty": {
            "type": "object",
            "$ref": "#/components/schemas/readSpecialty"
          }
        }
      },
      "address": {
        "type": "object",
        "properties": {
          "street": {
            "type": "string"
          },
          "number": {
            "type": "integer"
          },
          "zip": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          }
        }
      }
    }
  }
}
